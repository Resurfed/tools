# Generated by Django 2.0.6 on 2018-07-01 19:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Map',
            fields=[
                ('mapID', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=45)),
                ('difficulty', models.IntegerField()),
                ('checkpoints', models.IntegerField()),
                ('mapType', models.IntegerField()),
                ('author', models.CharField(max_length=45)),
                ('bonuses', models.IntegerField()),
                ('active', models.BooleanField()),
                ('prehop', models.BooleanField()),
                ('enableBakedTriggers', models.BooleanField()),
            ],
            options={
                'db_table': 'cs_maps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UploaderPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': (('uploader_access', 'Has access to the uploader'), ('uploader_admin', 'Has uploader admin access'), ('uploader_surf', 'Has access to all the surf servers'), ('uploader_bhop', 'Has access to all the bhop servers')),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('dictionary_name', models.CharField(max_length=30)),
                ('type', models.CharField(choices=[('Public', 'Public'), ('Private', 'Private')], max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('type', models.CharField(choices=[('FAST DL', 'FAST DL'), ('FAST DL PUBLIC', 'FAST DL PUBLIC'), ('SERVER', 'SERVER'), ('SERVER PUBLIC', 'SERVER PUBLIC')], max_length=20)),
                ('map_cycle_location', models.CharField(blank=True, max_length=128)),
                ('map_location', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='UploadLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('map_name', models.CharField(max_length=32)),
                ('exception', models.CharField(max_length=10240)),
                ('success', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ConnectionInfo',
            fields=[
                ('server', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='uploader.Server')),
                ('connection', models.CharField(choices=[('FTP', 'FTP'), ('FTPS', 'FTPS'), ('SFTP', 'SFTP')], max_length=10)),
                ('username', models.CharField(max_length=64)),
                ('password', models.CharField(max_length=64)),
                ('host_address', models.CharField(max_length=32)),
                ('port', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'Connection Info',
            },
        ),
        migrations.AddField(
            model_name='uploadlog',
            name='servers',
            field=models.ManyToManyField(to='uploader.Server'),
        ),
        migrations.AddField(
            model_name='uploadlog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='server',
            name='fast_download_server',
            field=models.ForeignKey(blank=True, limit_choices_to=models.Q(type__in=['FAST DL', 'FAST DL PUBLIC']), null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='uploader.Server'),
        ),
    ]
